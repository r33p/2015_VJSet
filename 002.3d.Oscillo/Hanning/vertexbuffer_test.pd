#N canvas 263 103 1152 738 10;
#N canvas 1 89 450 300 fps 0;
#X obj 46 -61 gemhead;
#X obj 46 -21 realtime;
#X obj 46 -41 t b b;
#X obj 46 41 /;
#X msg 46 21 1000 \$1;
#X obj 46 106 outlet;
#X obj 46 63 + 0.5;
#X obj 46 85 i;
#X connect 0 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X restore 466 149 pd fps;
#X floatatom 466 172 5 0 0 1 fps - -, f 5;
#X obj 6 76 cnv 15 450 100 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 7 236 cnv 15 450 375 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 7 181 cnv 15 450 50 empty empty empty 20 12 0 14 -195568 -66577
0;
#X text 59 27 Class: geometric object;
#X text 467 7 GEM object;
#X text 61 7 Synopsis: [gemvertexbuffer];
#X obj 462 76 cnv 15 100 60 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 1 102 450 300 gemwin 0;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X obj 67 41 route create;
#X msg 67 70 set destroy;
#X msg 142 68 set create;
#X msg 198 142 destroy;
#X msg 132 142 create \, 1;
#X obj 245 38 loadbang;
#X msg 272 82 reset \, frame 100;
#X obj 245 58 t b b;
#X obj 132 117 t b b;
#X msg 376 135 \; pd dsp 1;
#X obj 349 114 t b b;
#X obj 349 181 del 100;
#X obj 349 201 s \$0-init100;
#X obj 132 246 abstractions/gemwin;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 10 0;
#X connect 2 1 4 0;
#X connect 2 1 5 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 15 0;
#X connect 6 0 15 0;
#X connect 7 0 9 0;
#X connect 8 0 15 0;
#X connect 9 0 4 0;
#X connect 9 1 8 0;
#X connect 10 0 6 0;
#X connect 10 1 12 0;
#X connect 12 0 13 0;
#X connect 12 1 11 0;
#X connect 13 0 14 0;
#X restore 467 115 pd gemwin;
#X msg 467 96 create;
#X text 463 75 Create window:;
#X text 6 80 Description: Renders a vertexbuffer.;
#X text 11 179 Arguments:;
#X text 9 241 Inlets:;
#X text 27 253 Inlet 1: gemlist;
#X text 9 580 Outlets:;
#X text 21 593 Outlet 1: gemlist;
#X obj 569 7 cnv 15 400 700 empty empty empty 20 12 0 14 -228992 -66577
0;
#X obj 576 668 cnv 15 150 30 empty empty empty 20 12 0 14 -24198 -66577
0;
#X msg 792 593 draw line;
#X msg 802 614 draw points;
#X msg 692 384 color_enable \$1;
#X obj 673 384 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 579 134 GEMglPointSize 1;
#X obj 816 638 loadbang;
#X obj 579 76 translateXYZ 0 0 -2;
#X obj 579 114 rotateXYZ -45 0 -50;
#X obj 579 54 gemhead;
#X text 594 254 update VBO using table value;
#X obj 643 366 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 665 364 position_enable \$1;
#X obj 729 424 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 699 406 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 721 404 texture_enable \$1;
#X msg 748 424 normal_enable \$1;
#X obj 579 215 pix_image;
#X obj 579 234 pix_texture;
#X obj 593 153 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#N canvas 1 51 450 300 openpanel 0;
#X obj 114 62 inlet;
#X obj 121 254 outlet;
#X obj 114 125 openpanel;
#X msg 114 162 set open \$1;
#X obj 114 199 t b a;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 4 1 1 0;
#X restore 593 170 pd openpanel;
#X text 671 349 enable / disable specific VBO;
#X obj 579 32 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 577 14 Example:;
#X msg 816 658 resize 128;
#X floatatom 636 96 5 0 0 0 - - -, f 5;
#X obj 579 95 scale 3;
#X msg 593 271 position blablax blablay blablaz;
#X msg 604 290 color colorr colorg colorb colora;
#X msg 614 310 texture colorr colorg;
#X msg 627 331 normal colorr blablay blablaz;
#X obj 821 111 bng 15 250 50 0 empty \$0-init100 empty 17 7 0 10 -262144
-1 -1;
#X text 27 327 Inlet 1: message: texture / textureU / textureV: update
vertex texcoords from tables;
#X text 27 357 Inlet 1: message: normal / normalX / normalY / normalZ:
update vertex normals from tables;
#X text 27 297 Inlet 1: message: color / colorR / colorG / colorB /
colorA: update vertex colors from tables;
#X text 27 267 Inlet 1: message: position / posX / posY / posZ: update
vertex positions from tables;
#N canvas 428 155 679 574 tabledata 0;
#X text 65 43 applying table data as vertex data;
#X msg 30 100 position tabX tabY tabZ 0;
#X msg 30 130 position tabXYZ 0;
#X text 200 102 will read X \, Y & Z values from the 3 tables as position
data \, starting at offset=0 (offset can be omitted);
#X text 200 132 will read interleaved X \, Y & Z values from the table
tabXYZ \, starting at offset=0 (offset can be omitted);
#X text 200 172 will update only X values from given table (starting
at offset=10);
#X msg 31 169 posX tabX 10;
#X msg 31 209 posY tabY;
#X text 200 212 will update only Y values from given table (starting
at default offset=0);
#X text 39 290 the same applies to the other vertex data types:;
#X msg 234 346 colorR r;
#X msg 294 346 colorG g;
#X msg 354 346 colorB b;
#X msg 415 346 colorA a;
#X msg 36 376 texture U V;
#X msg 140 376 texture UV;
#X msg 234 376 textureU U;
#X msg 304 376 textureV V;
#X msg 36 406 normal x y z;
#X msg 36 346 color r g b a;
#X msg 141 346 color rgba;
#X msg 140 406 normal xyz;
#X msg 234 406 normalX x;
#X msg 304 406 normalY y;
#X msg 374 406 normalZ z;
#X msg 36 316 position X Y Z;
#X msg 140 316 position XYZ;
#X msg 234 316 positionX X;
#X msg 314 316 positionY Y;
#X msg 394 316 positionZ Z;
#X text 51 453 offset is always optional (default=0) \, and comes after
the table names;
#X text 50 507 unset table data is initialized to 0.f;
#X restore 464 333 pd tabledata;
#X text 27 384 Inlet 1: message: resize float : change the number of
vertex to use;
#X text 23 98 Vertex position \, color etc can be copy from pd table
to the vertex buffer (VBO = Vertex Buffer Object). This object can
draw lot's of points very efficiently.;
#X obj 796 144 t b b b;
#N canvas 988 100 450 459 load_tables 0;
#X obj 31 71 noise~;
#X obj 32 94 tabwrite~ colorr;
#X obj 32 114 noise~;
#X obj 33 158 noise~;
#X obj 33 137 tabwrite~ colorg;
#X obj 34 181 tabwrite~ colorb;
#X obj 33 209 noise~;
#X obj 34 252 noise~;
#X obj 35 296 noise~;
#X obj 34 232 tabwrite~ blablax;
#X obj 36 319 tabwrite~ blablaz;
#X obj 35 275 tabwrite~ blablay;
#X msg 288 48 dsp 1;
#X obj 288 68 s pd;
#X obj 288 28 loadbang;
#X obj 119 34 t b;
#X obj 119 13 loadbang;
#X msg 152 34 bang;
#X obj 215 10 inlet;
#X obj 266 152 table colorr 2000;
#X obj 266 172 table colorg 2000;
#X obj 266 194 table colorb 2000;
#X obj 266 216 table colora 2000;
#X obj 267 237 table blablax 2000;
#X obj 266 256 table blablay 2000;
#X obj 266 276 table blablaz 2000;
#X connect 0 0 1 0;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 6 0 9 0;
#X connect 7 0 11 0;
#X connect 8 0 10 0;
#X connect 12 0 13 0;
#X connect 14 0 12 0;
#X connect 15 0 1 0;
#X connect 15 0 4 0;
#X connect 15 0 5 0;
#X connect 15 0 9 0;
#X connect 15 0 11 0;
#X connect 15 0 10 0;
#X connect 16 0 15 0;
#X connect 17 0 15 0;
#X connect 18 0 15 0;
#X restore 783 230 pd load_tables;
#X obj 579 675 gemvertexbuffer;
#X msg 728 569 draw_range \$1 \$2;
#X obj 728 549 pack 0 0;
#X floatatom 728 507 5 0 0 0 - - -, f 5;
#X floatatom 774 507 5 0 0 0 - - -, f 5;
#X obj 774 526 t b f;
#X text 27 452 Inlet 1: message: draw_range float float : set the range
for partial draw.;
#X text 726 480 set start and end indexes to draw only a range of VBO
;
#X text 668 458 as soon as they are updated;
#X text 598 443 default : all VBO are disabled \, but they are enabled
;
#X floatatom 699 135 5 1 64 0 - - -, f 5;
#X floatatom 719 113 5 0 0 0 - - -, f 5;
#X text 27 479 Inlet 1: message: program float : set the id for glsl
program.;
#X text 27 409 Inlet 1: message: postion_enable float \, color_enable
float \, texture_enable float \, normal_enable float \, attribute_enable
float : enable/disable the use of this data;
#X text 27 507 Inlet 1: message: attribute name table (offset) : add
attribute / update attribute from table;
#X text 27 537 Inlet 1: message: reset_attributes : clear attribute
data;
#X text 27 552 Inlet 1: message: print_attributes : print active attributes
;
#X text 14 646 see examples/10.glsl/16.vertexbuffer_attributes.pd on
how to;
#X text 15 661 use attribute tables with the vertex buffer.;
#X text 57 190 number of vertices to be used. if this is a power of
two (2^n) \, you might have some performance gain.;
#X msg 593 190 open /home/rep/Background/hachage_out_#2.jpg;
#X connect 0 0 1 0;
#X connect 9 0 10 0;
#X connect 10 0 9 0;
#X connect 20 0 60 0;
#X connect 21 0 60 0;
#X connect 22 0 60 0;
#X connect 23 0 22 0;
#X connect 24 0 36 0;
#X connect 25 0 43 0;
#X connect 26 0 45 0;
#X connect 27 0 24 0;
#X connect 28 0 26 0;
#X connect 30 0 31 0;
#X connect 31 0 60 0;
#X connect 32 0 35 0;
#X connect 33 0 34 0;
#X connect 34 0 60 0;
#X connect 35 0 60 0;
#X connect 36 0 37 0;
#X connect 37 0 60 0;
#X connect 38 0 39 0;
#X connect 39 0 80 0;
#X connect 41 0 28 0;
#X connect 43 0 60 0;
#X connect 44 0 45 1;
#X connect 45 0 27 0;
#X connect 46 0 60 0;
#X connect 47 0 60 0;
#X connect 48 0 60 0;
#X connect 49 0 60 0;
#X connect 50 0 58 0;
#X connect 58 0 46 0;
#X connect 58 1 47 0;
#X connect 58 2 59 0;
#X connect 61 0 60 0;
#X connect 62 0 61 0;
#X connect 63 0 62 0;
#X connect 64 0 65 0;
#X connect 65 0 62 0;
#X connect 65 1 62 1;
#X connect 70 0 24 1;
#X connect 71 0 27 3;
#X connect 80 0 36 0;
